import { Request, Response } from 'express';
import { AuthRequest } from '../middleware/auth';
import { AdsPowerService } from '../services/AdsPowerService';
import { DropboxService } from '../services/DropboxService';
import logger from '../utils/logger';
import multer from 'multer';
import path from 'path';
import fs from 'fs';

// –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π AdsPower
class AdsPowerConfigGenerator {
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è User-Agent –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –≤–µ—Ä—Å–∏–π Chrome
  static generateUserAgent(): string {
    const chromeVersions = ['138.0.6887.54', '137.0.6864.110', '136.0.6803.90'];
    const version = chromeVersions[Math.floor(Math.random() * chromeVersions.length)];
    const windowsVersions = ['10.0', '11.0'];
    const winVersion = windowsVersions[Math.floor(Math.random() * windowsVersions.length)];
    
    return `Mozilla/5.0 (Windows NT ${winVersion}; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${version} Safari/537.36`;
  }

  // –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è WebGL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  static generateWebGLConfig() {
    const vendors = [
      { vendor: 'Google Inc. (AMD)', renderer: 'ANGLE (AMD, AMD Radeon RX 6800 XT (0x000073BF) Direct3D11 vs_5_0 ps_5_0, D3D11)' },
      { vendor: 'Google Inc. (Intel)', renderer: 'ANGLE (Intel, Intel(R) UHD Graphics 630 (0x00003E9B) Direct3D11 vs_5_0 ps_5_0, D3D11)' },
      { vendor: 'Google Inc. (Apple)', renderer: 'ANGLE (Apple, ANGLE Metal Renderer: Apple M1, Version 14.2)' }
    ];
    
    const config = vendors[Math.floor(Math.random() * vendors.length)];
    return {
      vendor: config.vendor,
      renderer: config.renderer,
      // Canvas –∏ WebGL Image –û–¢–ö–õ–Æ–ß–ï–ù–´ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Instagram
      canvasImage: 'disabled',
      webglImage: 'disabled'
    };
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è
  static generateProfileConfig(profileName: string, instagramLogin: string) {
    const webglConfig = this.generateWebGLConfig();
    
    return {
      // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      name: profileName,
      browser: 'SunBrowser', // Chrome-based –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      browserVersion: Math.floor(Math.random() * 3) + 136, // 136-138
      system: 'Windows',
      systemVersion: Math.random() > 0.7 ? '11' : '10', // 70% Windows 10, 30% Windows 11
      userAgent: this.generateUserAgent(),
      group: 'Instagram_Automation',
      notes: `–°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è Instagram: ${instagramLogin}`,
      
      // –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–Ω–∞—á–∞–ª—å–Ω—ã–µ)
      proxy: {
        type: 'no_proxy', // –ù–∞—á–∏–Ω–∞–µ–º –±–µ–∑ –ø—Ä–æ–∫—Å–∏
        platform: 'none'
      },
      
      // –û—Ç–ø–µ—á–∞—Ç–æ–∫ –±—Ä–∞—É–∑–µ—Ä–∞
      fingerprint: {
        webgl: {
          vendor: webglConfig.vendor,
          renderer: webglConfig.renderer,
          canvasImage: webglConfig.canvasImage,
          webglImage: webglConfig.webglImage
        },
        canvas: {
          noise: true // –í–∫–ª—é—á–∞–µ–º —à—É–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        },
        audioContext: {
          noise: true
        },
        clientRects: {
          noise: true
        },
        fonts: 'auto', // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —à—Ä–∏—Ñ—Ç–æ–≤
        geolocation: 'disabled', // –û—Ç–∫–ª—é—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
        language: ['ru-RU', 'ru', 'en-US', 'en'],
        timezone: 'Europe/Moscow', // –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
        resolution: this.generateOptimalResolution()
      }
    };
  }
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
  static generateOptimalResolution() {
    const resolutions = [
      { width: 1920, height: 1080 },
      { width: 1366, height: 768 },
      { width: 1536, height: 864 },
      { width: 1440, height: 900 }
    ];
    
    return resolutions[Math.floor(Math.random() * resolutions.length)];
  }
}

// –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
class KomboRecoverySystem {
  
  static async checkProfileHealth(profileId: string): Promise<boolean> {
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è –≤ AdsPower
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–æ—Ñ–∏–ª—è
      return true;
    } catch (error) {
      logger.error('Profile health check failed', { profileId, error });
      return false;
    }
  }
  
  static async autoRecover(profileId: string): Promise<boolean> {
    try {
      logger.info('Starting auto-recovery for profile', { profileId });
      
      // 1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
      // 2. –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à
      // 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
      // 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
      
      return true;
    } catch (error) {
      logger.error('Auto-recovery failed', { profileId, error });
      return false;
    }
  }
}

// Pupiter - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
class Pupiter {
  private isRunning: boolean = false;
  private currentTask: string | null = null;
  private progress: number = 0;
  private logs: string[] = [];
  
  constructor() {
    this.log('üéÆ Pupiter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }
  
  private log(message: string) {
    const timestamp = new Date().toISOString();
    const logEntry = `[${timestamp}] ${message}`;
    this.logs.push(logEntry);
    logger.info(logEntry);
    
    // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 –∑–∞–ø–∏—Å–µ–π
    if (this.logs.length > 100) {
      this.logs = this.logs.slice(-100);
    }
  }
  
  async startAutomation(profileConfig: any, mediaFiles: string[], instagramData: any) {
    if (this.isRunning) {
      throw new Error('–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞');
    }
    
    this.isRunning = true;
    this.progress = 0;
    this.currentTask = '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è';
    
    try {
      this.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏');
      
      // –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ AdsPower –ø—Ä–æ—Ñ–∏–ª—è (20%)
      this.currentTask = '–°–æ–∑–¥–∞–Ω–∏–µ AdsPower –ø—Ä–æ—Ñ–∏–ª—è';
      this.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è');
      await this.sleep(2000);
      this.progress = 20;
      
      // –≠—Ç–∞–ø 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ø–µ—á–∞—Ç–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ (40%)
      this.currentTask = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ø–µ—á–∞—Ç–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞';
      this.log('üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ WebGL –∏ Canvas –Ω–∞—Å—Ç—Ä–æ–µ–∫');
      await this.sleep(2000);
      this.progress = 40;
      
      // –≠—Ç–∞–ø 3: –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ñ–∏–ª—è (60%)
      this.currentTask = '–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ñ–∏–ª—è';
      this.log('‚ñ∂Ô∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏');
      await this.sleep(2000);
      this.progress = 60;
      
      // –≠—Ç–∞–ø 4: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (80%)
      this.currentTask = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞';
      this.log(`üìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ ${mediaFiles.length} –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤`);
      await this.sleep(2000);
      this.progress = 80;
      
      // –≠—Ç–∞–ø 5: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ (100%)
      this.currentTask = '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏';
      this.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      await this.sleep(1000);
      this.progress = 100;
      
      this.log('üéØ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å Instagram');
      
      return {
        success: true,
        profileId: 'AUTO_' + Date.now(),
        message: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ'
      };
      
    } catch (error) {
      this.log(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: ${error.message}`);
      throw error;
    } finally {
      this.isRunning = false;
      this.currentTask = null;
    }
  }
  
  private sleep(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }
  
  getStatus() {
    return {
      isRunning: this.isRunning,
      currentTask: this.currentTask,
      progress: this.progress,
      logs: this.logs.slice(-10) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
    };
  }
  
  stop() {
    if (this.isRunning) {
      this.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      this.isRunning = false;
      this.currentTask = null;
      this.progress = 0;
    }
  }
}

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä KOMBO
export class KomboController {
  private static pupiterStatus = {
    isRunning: false,
    currentTask: '–û–∂–∏–¥–∞–Ω–∏–µ',
    progress: 0,
    totalProfiles: 0,
    activeProfiles: 0,
    errors: [] as string[],
    logs: [] as string[]
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ Pupiter
  static async getPupiterStatus(req: AuthRequest, res: Response) {
    try {
      res.json(KomboController.pupiterStatus);
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Pupiter:', error);
      res.status(500).json({ error: error.message });
    }
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Dropbox
  static async connectDropbox(req: AuthRequest, res: Response) {
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Dropbox
      // –ü–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
      KomboController.addLog('üìÅ Dropbox –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      
      res.json({
        success: true,
        message: 'Dropbox –ø–æ–¥–∫–ª—é—á–µ–Ω',
        folderPath: '/OrbitHub/Media',
        filesCount: 0
      });
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Dropbox:', error);
      KomboController.addError(`–û—à–∏–±–∫–∞ Dropbox: ${error.message}`);
      res.status(500).json({ error: error.message });
    }
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
  static uploadConfig = multer({
    dest: path.join(__dirname, '../../uploads/kombo/'),
    limits: {
      fileSize: 100 * 1024 * 1024, // 100MB
      files: 50
    },
    fileFilter: (req, file, cb) => {
      if (file.mimetype.startsWith('video/')) {
        cb(null, true);
      } else {
        cb(new Error('–¢–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã'));
      }
    }
  });

  static async uploadMedia(req: AuthRequest, res: Response) {
    try {
      const files = req.files as Express.Multer.File[];
      if (!files || files.length === 0) {
        return res.status(400).json({ error: '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏' });
      }

      const mediaFiles = files.map(file => ({
        originalName: file.originalname,
        fileName: file.filename,
        filePath: file.path,
        size: file.size,
        uploadedAt: new Date().toISOString()
      }));

      KomboController.addLog(`üì§ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${mediaFiles.length} –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤`);

      res.json({
        success: true,
        files: mediaFiles,
        message: `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${mediaFiles.length} —Ñ–∞–π–ª–æ–≤`
      });
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:', error);
      KomboController.addError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`);
      res.status(500).json({ error: error.message });
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ Instagram –¥–∞–Ω–Ω—ã—Ö
  static async saveInstagramData(req: AuthRequest, res: Response) {
    try {
      const { login, password, profileName } = req.body;
      
      if (!login || !password) {
        return res.status(400).json({ error: '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ (–≤ –±—É–¥—É—â–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
      KomboController.addLog(`üë§ Instagram –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ${login}`);

      res.json({
        success: true,
        message: '–î–∞–Ω–Ω—ã–µ Instagram —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
        account: {
          login,
          profileName: profileName || login
        }
      });
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Instagram –¥–∞–Ω–Ω—ã—Ö:', error);
      KomboController.addError(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
      res.status(500).json({ error: error.message });
    }
  }

  // üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–û–ó–î–ê–ù–ò–ï ADSPOWER –ü–†–û–§–ò–õ–Ø
  static async createAdsPowerProfile(req: AuthRequest, res: Response) {
    try {
      const { instagramData, settings } = req.body;
      
      if (!instagramData?.login || !instagramData?.password) {
        return res.status(400).json({ error: '–î–∞–Ω–Ω—ã–µ Instagram –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã' });
      }

      KomboController.updateStatus('–°–æ–∑–¥–∞–Ω–∏–µ AdsPower –ø—Ä–æ—Ñ–∏–ª—è...', 20);
      KomboController.addLog(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ AdsPower –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è ${instagramData.login}`);

      const adsPowerService = new AdsPowerService();
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å AdsPower API
        const isConnected = await adsPowerService.checkConnection();
        if (!isConnected) {
          throw new Error('AdsPower –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://local.adspower.net:50325');
        }

        KomboController.updateStatus('AdsPower –ø–æ–¥–∫–ª—é—á–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å...', 40);
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        const result = await adsPowerService.createInstagramProfile({
          login: instagramData.login,
          password: instagramData.password,
          profileName: instagramData.profileName || instagramData.login
        });

        KomboController.updateStatus('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 100);
        KomboController.addLog(`‚úÖ AdsPower –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: ID ${result.profileId}`);

        setTimeout(() => {
          KomboController.updateStatus('–û–∂–∏–¥–∞–Ω–∏–µ', 0);
        }, 3000);

        res.json({
          success: true,
          result: result,
          message: `–ü—Ä–æ—Ñ–∏–ª—å AdsPower —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ (ID: ${result.profileId})`
        });

      } catch (adsPowerError: any) {
        KomboController.addError(`AdsPower –æ—à–∏–±–∫–∞: ${adsPowerError.message}`);
        throw adsPowerError;
      }

    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è AdsPower –ø—Ä–æ—Ñ–∏–ª—è:', error);
      KomboController.updateStatus('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è', 0);
      KomboController.addError(error.message);
      res.status(500).json({ error: error.message });
    }
  }

  // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Pupiter
  static async startAutomation(req: AuthRequest, res: Response) {
    try {
      const { instagramData, mediaFiles, settings } = req.body;

      if (KomboController.pupiterStatus.isRunning) {
        return res.status(400).json({ error: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞' });
      }

      KomboController.pupiterStatus.isRunning = true;
      KomboController.updateStatus('–ó–∞–ø—É—Å–∫ Pupiter –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏...', 0);
      KomboController.addLog('üéÆ Pupiter: –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é Instagram');

      // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
      setTimeout(() => {
        KomboController.updateStatus('–ê–Ω–∞–ª–∏–∑ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤...', 25);
        KomboController.addLog(`üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º ${mediaFiles?.length || 0} –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤`);
      }, 1000);

      setTimeout(() => {
        KomboController.updateStatus('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...', 50);
        KomboController.addLog('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Ö–µ—à—Ç–µ–≥–∏');
      }, 3000);

      setTimeout(() => {
        KomboController.updateStatus('–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...', 75);
        KomboController.addLog('üì§ –ù–∞—á–∏–Ω–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Instagram');
      }, 5000);

      res.json({
        success: true,
        message: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞',
        status: KomboController.pupiterStatus
      });

    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:', error);
      KomboController.pupiterStatus.isRunning = false;
      KomboController.addError(error.message);
      res.status(500).json({ error: error.message });
    }
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
  static async stopAutomation(req: AuthRequest, res: Response) {
    try {
      KomboController.pupiterStatus.isRunning = false;
      KomboController.updateStatus('–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', 0);
      KomboController.addLog('‚èπÔ∏è Pupiter: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');

      res.json({
        success: true,
        message: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
      });
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:', error);
      res.status(500).json({ error: error.message });
    }
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  private static updateStatus(task: string, progress: number) {
    KomboController.pupiterStatus.currentTask = task;
    KomboController.pupiterStatus.progress = progress;
  }

  private static addLog(message: string) {
    const timestamp = new Date().toLocaleTimeString();
    const logMessage = `[${timestamp}] ${message}`;
    KomboController.pupiterStatus.logs.push(logMessage);
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤
    if (KomboController.pupiterStatus.logs.length > 50) {
      KomboController.pupiterStatus.logs = KomboController.pupiterStatus.logs.slice(-30);
    }
    
    console.log('üìù Pupiter:', logMessage);
  }

  private static addError(message: string) {
    const timestamp = new Date().toLocaleTimeString();
    const errorMessage = `[${timestamp}] ‚ùå ${message}`;
    KomboController.pupiterStatus.errors.push(errorMessage);
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫
    if (KomboController.pupiterStatus.errors.length > 10) {
      KomboController.pupiterStatus.errors = KomboController.pupiterStatus.errors.slice(-5);
    }
    
    console.error('‚ùå Pupiter Error:', errorMessage);
  }
} 