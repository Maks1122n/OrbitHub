import { User } from '../models/User';
import logger from './logger';

export const createDefaultAdmin = async (): Promise<void> => {
  try {
    console.log('üîß SETUP: Checking for existing admin...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
    const existingAdmin = await User.findOne({ role: 'admin' });
    if (existingAdmin) {
      console.log('üîß SETUP: Default admin already exists:', existingAdmin.email);
      logger.info('Default admin already exists');
      return;
    }

    console.log('üîß SETUP: Creating default admin...');
    
    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const defaultAdmin = new User({
      email: 'admin@orbithub.com',
      password: 'admin123456', // –±—É–¥–µ—Ç –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      name: 'OrbitHub Admin',
      role: 'admin'
    });

    await defaultAdmin.save();
    
    console.log('üîß SETUP: Default admin created successfully!');
    console.log('üîß SETUP: Email: admin@orbithub.com');
    console.log('üîß SETUP: Password: admin123456');
    
    logger.info('Default admin created successfully');
    logger.info('Email: admin@orbithub.com');
    logger.info('Password: admin123456');
    
  } catch (error) {
    console.error('üîß SETUP ERROR: Failed to create admin:', error);
    logger.error('Error creating default admin:', error);
  }
}; 